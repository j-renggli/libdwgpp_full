#pragma once

#include <libredwgpp/parser/version.h>
#include <libredwgpp/schema/schema.h>

using namespace libredwgpp;

class NoOpSchema : public libredwgpp::ISchema
{
  ////////////////////////////////////////////////////////////////
  // Definitions
  ////////////////////////////////////////////////////////////////
  public:

  ////////////////////////////////////////////////////////////////
  // Members
  ////////////////////////////////////////////////////////////////
  private:

  ////////////////////////////////////////////////////////////////
  // Constructors & Destructor
  ////////////////////////////////////////////////////////////////
  public:
    virtual ~NoOpSchema() {}

  ////////////////////////////////////////////////////////////////
  // Operators
  ////////////////////////////////////////////////////////////////
  private:

  ////////////////////////////////////////////////////////////////
  // Functions
  ////////////////////////////////////////////////////////////////
  public:
    virtual void addFace3d(const Face3d& face) {}

//    virtual const std::vector<Face3d>& getFaces3d() const {}

  public:
    virtual void initialise(libredwgpp::Version version) {}

    virtual void finalise() {}

    virtual UnicodeString getVersion(libredwgpp::Version version) const { return ""; }
};
